% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_data.R
\name{check_equivalence}
\alias{check_equivalence}
\title{Check Structural Equivalence Between Clinical Sample and Evaluated Material Data}
\usage{
check_equivalence(cs_data, eq_data)
}
\arguments{
\item{cs_data}{A \code{data.table} containing clinical sample data. Must
contain columns  compatible with the
\code{repair_data(type = "cs")} preprocessing function.}

\item{eq_data}{A \code{data.table} containing evaluated material data. Must
contain columns compatible with the
\code{repair_data(type = "eqam")} preprocessing function.}
}
\value{
A \code{list} with the following components:
\itemize{
  \item \code{equal_names: } A \code{logical} value. Indicates if both
        datasets have identical column names.
  \item \code{equal_order: } A \code{logical} value. Indicates if column
        order is identical (can only be \code{TRUE} if \code{equal_names} is
        \code{TRUE}).
  \item \code{names_in_cs_data_but_not_in_eq_data: } A \code{character}
         string. Names unique to \code{cs_data}.
  \item \code{names_in_eq_data_but_not_in_cs_data: } A \code{character}
         string. Names unique to \code{cs_data}.
  \item \code{order_cs_data: } A \code{character} string. Column order in
        \code{cs_data}.
  \item \code{order_eq_data: } A \code{character} string. Column order in
        \code{eq_data}.
}
}
\description{
Compares the structural compatibility of two datasets (clinical samples and
evaluated materials) by verifying identical column names and matching column
order. This validation is essential for ensuring dataset compatibility in
downstream analyses or merging operations.
}
\details{
Function Workflow:

1. Data Preprocessing:
\itemize{
 \item Attempts to repair both datasets using type-specific
       \code{repair_data} calls.
 \item Returns early with available information if either dataset fails
       preprocessing.
}

2. Name Comparison:
\itemize{
 \item Checks for exact match between column names using set operations.
 \item Identifies mismatches using \code{setdiff()}.
 \item Converts mismatches to comma-separated strings for readability.
}

3. Order Comparison:
\itemize{
 \item Only performed if column names are identical.
 \item Verifies identical column sequence using element-wise comparison.
}

Use Cases:
\itemize{
 \item Validation step before dataset merging.
 \item Quality control in automated data pipelines.
 \item Preprocessing check for analytical functions requiring matched schemas.
}
}
\examples{
# Required packages
library(smooth.commutability)
library(data.table)

# Get example data from smooth.commutability package
test_cs_data <- reverse_comparison_data(copy(crp_cs_data))
test_eq_data <- reverse_comparison_data(copy(crp_eqam_data))

# Check equivalence:
check_equivalence(
  cs_data = test_cs_data,
  eq_data = test_eq_data
)

}
